name: Node.js CI

on:
  push:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.x]

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Deploy to VPS using password
      uses: appleboy/ssh-action@v0.1.7
      with:
        host: ${{ secrets.HOSTINGER_VPS_HOST }}
        username: ${{ secrets.HOSTINGER_VPS_USERNAME }}
        password: ${{ secrets.HOSTINGER_VPS_PASSWORD }}
        script: |
          cd ~/chronicles-exhibits/ || { echo "Failed to navigate to project directory"; exit 1; }
          if git pull origin main | grep -q 'Already up to date.'; then
            echo "No changes detected, skipping build and deployment.";
            exit 0;
          fi

          # Backup existing .env.local
          [ -f .env.local ] && cp .env.local .env.local.bak

          # Create .env.local file
          cat <<EOT > .env.local
          MONGODB_URI=${{ secrets.MONGODB_URI }}
          JWT_SECRET=${{ secrets.JWT_SECRET }}
          UPLOADTHING_TOKEN=${{ secrets.UPLOADTHING_TOKEN }}
          EMAIL_FROM=${{ secrets.EMAIL_FROM }}
          EMAIL_TO=${{ secrets.EMAIL_TO }}
          EMAIL_TO2=${{ secrets.EMAIL_TO2 }}
          EMAIL_USERNAME=${{ secrets.EMAIL_USERNAME }}
          EMAIL_PASSWORD=${{ secrets.EMAIL_PASSWORD }}
          EMAIL_HOST=${{ secrets.EMAIL_HOST }}
          EOT

          [ -d node_modules ] || npm install --legacy-peer-deps || exit 1
          npm run build || { echo "Build failed"; exit 1; }
          pm2 restart chronicles-exhibits || { echo "Failed to restart application"; exit 1; }
