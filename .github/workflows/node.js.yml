name: Node.js CI

on:
  push:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.x]

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Deploy to VPS using password
      uses: appleboy/ssh-action@v0.1.7
      with:
        host: ${{ secrets.HOSTINGER_VPS_HOST }}
        username: ${{ secrets.HOSTINGER_VPS_USERNAME }}
        password: ${{ secrets.HOSTINGER_VPS_PASSWORD }}
        script: |
          # Load NVM
          export NVM_DIR="$HOME/.nvm"
          [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
          [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"

          # Use the installed Node.js version
          nvm use 20.18.2 || exit 1

          # Navigate to the project directory
          cd ~/chronicles-exhibits/ || exit 1

          # Pull the latest changes
          git pull origin main || exit 1

          # Create .env.local file
          cat <<EOT > .env.local
          MONGODB_URI=${{ secrets.MONGODB_URI }}
          JWT_SECRET=${{ secrets.JWT_SECRET }}
          UPLOADTHING_TOKEN=${{ secrets.UPLOADTHING_TOKEN }}
          EMAIL_FROM=${{ secrets.EMAIL_FROM }}
          EMAIL_TO=${{ secrets.EMAIL_TO }}
          EMAIL_TO2=${{ secrets.EMAIL_TO2 }}
          EMAIL_USERNAME=${{ secrets.EMAIL_USERNAME }}
          EMAIL_PASSWORD=${{ secrets.EMAIL_PASSWORD }}
          EMAIL_HOST=${{ secrets.EMAIL_HOST }}
          UPLOADTHING_CALLBACK_URL=${{ secrets.UPLOADTHING_CALLBACK_URL}}
          EOT

          # Install dependencies
          npm install --legacy-peer-deps || exit 1

          # Build the application
          npm run build || exit 1

          # Restart the application using PM2
          pm2 restart 0 || exit 1

