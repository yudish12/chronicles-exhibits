name: Node.js CI

on:
  push:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.18.2]

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Deploy to VPS
      uses: appleboy/ssh-action@v0.1.3
      with:
        host: ${{ secrets.HOSTINGER_VPS_HOST }}
        username: ${{ secrets.HOSTINGER_VPS_USERNAME }}
        key: ${{ secrets.HOSTINGER_VPS_SSH_PRIVATE_KEY }}
        script: |
          cd /home/root/chronicles-exhibits/ || exit 1
          git pull origin main || exit 1
          
          # Create .env.local file
          echo "MONGODB_URI=${{ secrets.MONGODB_URI }}" > .env.local
          echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env.local
          echo "UPLOADTHING_TOKEN=${{ secrets.UPLOADTHING_TOKEN }}" >> .env.local
          echo "EMAIL_FROM=${{ secrets.EMAIL_FROM }}" >> .env.local
          echo "EMAIL_TO=${{ secrets.EMAIL_TO }}" >> .env.local
          echo "EMAIL_TO2=${{ secrets.EMAIL_TO2 }}" >> .env.local
          echo "EMAIL_USERNAME=${{ secrets.EMAIL_USERNAME }}" >> .env.local
          echo "EMAIL_PASSWORD=${{ secrets.EMAIL_PASSWORD }}" >> .env.local
          echo "EMAIL_HOST=${{ secrets.EMAIL_HOST }}" >> .env.local

          npm ci --legacy-peer-deps || exit 1
          npm run build || exit 1
          pm2 restart all || exit 1
